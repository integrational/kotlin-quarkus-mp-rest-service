plugins {
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.allopen" version "${kotlinVersion}"
    id 'io.quarkus'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.quarkus:quarkus-kotlin'

    // included: MicroProfile Config
    implementation 'io.quarkus:quarkus-arc' // CDI
    implementation 'io.quarkus:quarkus-jsonb' // JSON-B
    implementation 'io.quarkus:quarkus-jsonp' // JSON-P
    implementation 'io.quarkus:quarkus-resteasy' // JAX-RS
    implementation 'io.quarkus:quarkus-resteasy-jsonb' // JSON-B for JAX-RS

    implementation 'io.quarkus:quarkus-smallrye-openapi' // MicroProfile OpenAPI
    //implementation 'io.quarkus:quarkus-smallrye-jwt' // MicroProfile JWT Authentication

    implementation 'io.quarkus:quarkus-rest-client' // MicroProfile Rest Client

    implementation 'io.quarkus:quarkus-smallrye-opentracing' // MicroProfile OpenTracing
    implementation 'io.quarkus:quarkus-smallrye-metrics' // MicroProfile Metrics
    implementation 'io.quarkus:quarkus-smallrye-health' // MicroProfile Health
    implementation 'io.quarkus:quarkus-smallrye-fault-tolerance' // MicroProfile Fault Tolerance

    //implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'org.integrational'
version '0.0.1-SNAPSHOT'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
